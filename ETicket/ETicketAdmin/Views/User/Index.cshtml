@model ETicketAdmin.Common.PaginatedList<DBContextLibrary.Domain.Entities.User>
@using System.Linq; 

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>User table</h1>

<p>
    <a asp-action="Create" class="btn btn-success">
        <span class="text">Create New</span>
    </a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().FirstName);
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Role)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Privilege)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Document)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Role.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Privilege.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Document.Number)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">
                        <span class="text">Edit</span>
                    </a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">
                        <span class="text">Details</span>
                    </a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">
                        <span class="text">Delete</span>
                    </a>
                    <p>
                        @if (item.Email != null)
                        {
                            <a asp-action="SendMessage" asp-route-id="@item.Id">Send message</a>
                        }                      
                    </p>      
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>

@for (var pageNumber = 1; pageNumber <= Model.TotalPages; pageNumber++)
{
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@pageNumber"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default">
        @pageNumber
    </a>
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>