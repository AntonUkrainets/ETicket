@model ETicketAdmin.Common.PaginatedList<DBContextLibrary.Domain.Entities.TransactionHistory>

@{
    ViewData["Title"] = "Index";
}

<h1>Transaction History</h1>

<select id="Records" onchange="return postSelectedRecord()">
    <!option @(ViewBag.PageSize == 1 ? "selected" : "")>1</!option>
    <!option @(ViewBag.PageSize == 2 ? "selected" : "")>2</!option>
    <!option @(ViewBag.PageSize == 10 ? "selected" : "")>10</!option>
    <!option @(ViewBag.PageSize == 25 ? "selected" : "")>25</!option>
    <!option @(ViewBag.PageSize == 50 ? "selected" : "")>50</!option>
    <!option @(ViewBag.PageSize == 100 ? "selected" : "")>100</!option>
</select>

<script type="text/javascript">
    function postSelectedRecord() {
        var postData = GetSelectedCountRecords();

        $.ajax({
            type: "POST",
            url: 'https://localhost:44381/TransactionHistory/SetPageSize',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(postData),
            error: function (response) {
                console.log(response);
            },
            success: function (response) {
                console.log(response);
                location.reload();
            }
        });
    }

    function GetSelectedCountRecords() {
        var records = document.getElementById("Records");
        var selectedValue = records.options[records.selectedIndex].value;

        return selectedValue;
    }
</script>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("TotalPrice", "Index",
                    new { sortBy = "TotalPrice", sortDirection = ViewBag.SortDirection })
            </th>
            <th>
                @Html.ActionLink("Date", "Index",
                    new { sortBy = "Date", sortDirection = ViewBag.SortDirection })
            </th>
            <th>
                @Html.ActionLink("TicketType", "Index",
                    new { sortBy = "TicketType", sortDirection = ViewBag.SortDirection })
            </th>
            <th>
                @Html.ActionLink("Count", "Index",
                    new { sortBy = "Count", sortDirection = ViewBag.SortDirection })
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalPrice)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TicketType.TypeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Count)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<br />

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-pageNumber="@(Model.PageIndex - 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>

@for (var pageNumber = 1; pageNumber <= Model.TotalPages; pageNumber++)
{
    <a asp-action="Index"
        asp-route-sortOrder="@ViewData["CurrentSort"]"
        asp-route-pageNumber="@pageNumber"
        asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default">
        @pageNumber
    </a>
}

<a asp-action="Index"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-pageNumber="@(Model.PageIndex + 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>